/** @type {string | [string, string][]} */
const tokens = [
  "Ident",

  ["Let", "let"],
  ["Var", "var"],
  ["Const", "const"],
  ["If", "if"],
  ["While", "while"],
  ["Do", "do"],
  ["Else", "else"],
  ["Function", "function"],
  ["Try", "try"],
  ["Catch", "catch"],
  ["Finally", "finally"],
  ["Throw", "throw"],
  ["Return", "return"],
  ["For", "for"],
  ["New", "new"],
  ["In", "in"],
  ["Of", "of"],
  ["Instanceof", "instanceof"],
  ["Yield", "yield"],
  ["Async", "async"],
  ["Await", "await"],
  ["Break", "break"],
  ["Continue", "continue"],
  ["Debugger", "debugger"],
  ["With", "with"],
  ["Delete", "delete"],
  ["Typeof", "typeof"],
  ["Void", "void"],
  ["True", "true"],
  ["False", "false"],
  ["Class", "class"],
  ["Extends", "extends"],
  ["Static", "static"],
  ["Super", "super"],

  "String",
  "Number",
  "Regex",

  "LBrace",
  "RBrace",
  "LParen",
  "RParen",
  "LSquare",
  "RSquare",
  "Comma",
  "Colon",
  "Dot",
  "DotDotDot",
  "Semi",
  "Question",
  "Bang",
  "Tilde",

  "FatArrow",
  "Eq",

  "EqEq",
  "EqEqEq",
  "BangEq",
  "BangEqEq",

  "LessThan",
  "LessThanEq",
  "GreaterThan",
  "GreaterThanEq",

  "Plus",
  "Minus",
  "MinusMinus",
  "PlusPlus",
  "Star",
  "Slash",

  "AmpAmpEq",
  "BarBarEq",
  "QuestionQuestionEq",
  "StarEq",
  "SlashEq",
  "PercentEq",
  "PlusEq",
  "MinusEq",
  "LessThanLessThanEq",
  "GreaterThanGreaterThanEq",
  "GreaterThanGreaterThanGreaterThanEq",
  "AmpEq",
  "CaretEq",
  "BarEq",
  "StarStarEq",

  "VBar",
  "VBarVBar",
  "Amp",
  "AmpAmp",
  "Caret",

  "EndOfFile",
];
module.exports = { tokens };
